//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace MyCTS.Services.BuildElectronicTicketDev {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MailProviderSoap", Namespace="http://tempuri.org/")]
    public partial class MailProvider : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BuildPDFDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPDFDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecryptOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MailProvider() {
            this.Url = global::MyCTS.Services.Properties.Settings.Default.MyCTS_Services_BuildElectronicTicketDev_MailProvider;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BuildPDFDocumentsCompletedEventHandler BuildPDFDocumentsCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event SendPDFDocumentsCompletedEventHandler SendPDFDocumentsCompleted;
        
        /// <remarks/>
        public event EncryptCompletedEventHandler EncryptCompleted;
        
        /// <remarks/>
        public event DecryptCompletedEventHandler DecryptCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuildPDFDocuments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BuildPDFDocuments(string[] ticketNumber, string[] urlVirtuallyThere, string airline, string from, string password, string to, string displayName) {
            this.Invoke("BuildPDFDocuments", new object[] {
                        ticketNumber,
                        urlVirtuallyThere,
                        airline,
                        from,
                        password,
                        to,
                        displayName});
        }
        
        /// <remarks/>
        public void BuildPDFDocumentsAsync(string[] ticketNumber, string[] urlVirtuallyThere, string airline, string from, string password, string to, string displayName) {
            this.BuildPDFDocumentsAsync(ticketNumber, urlVirtuallyThere, airline, from, password, to, displayName, null);
        }
        
        /// <remarks/>
        public void BuildPDFDocumentsAsync(string[] ticketNumber, string[] urlVirtuallyThere, string airline, string from, string password, string to, string displayName, object userState) {
            if ((this.BuildPDFDocumentsOperationCompleted == null)) {
                this.BuildPDFDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildPDFDocumentsOperationCompleted);
            }
            this.InvokeAsync("BuildPDFDocuments", new object[] {
                        ticketNumber,
                        urlVirtuallyThere,
                        airline,
                        from,
                        password,
                        to,
                        displayName}, this.BuildPDFDocumentsOperationCompleted, userState);
        }
        
        private void OnBuildPDFDocumentsOperationCompleted(object arg) {
            if ((this.BuildPDFDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildPDFDocumentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendEmail(string from, string password, string displayName, string to, string cc, string subject, string body, string document, bool isHTMLFormat) {
            this.Invoke("SendEmail", new object[] {
                        from,
                        password,
                        displayName,
                        to,
                        cc,
                        subject,
                        body,
                        document,
                        isHTMLFormat});
        }
        
        /// <remarks/>
        public void SendEmailAsync(string from, string password, string displayName, string to, string cc, string subject, string body, string document, bool isHTMLFormat) {
            this.SendEmailAsync(from, password, displayName, to, cc, subject, body, document, isHTMLFormat, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string from, string password, string displayName, string to, string cc, string subject, string body, string document, bool isHTMLFormat, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        from,
                        password,
                        displayName,
                        to,
                        cc,
                        subject,
                        body,
                        document,
                        isHTMLFormat}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendPDFDocuments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendPDFDocuments(string ticket, string mail, string ccMail, string urlVirtuallyThere, string from, string pass, string displayName) {
            this.Invoke("SendPDFDocuments", new object[] {
                        ticket,
                        mail,
                        ccMail,
                        urlVirtuallyThere,
                        from,
                        pass,
                        displayName});
        }
        
        /// <remarks/>
        public void SendPDFDocumentsAsync(string ticket, string mail, string ccMail, string urlVirtuallyThere, string from, string pass, string displayName) {
            this.SendPDFDocumentsAsync(ticket, mail, ccMail, urlVirtuallyThere, from, pass, displayName, null);
        }
        
        /// <remarks/>
        public void SendPDFDocumentsAsync(string ticket, string mail, string ccMail, string urlVirtuallyThere, string from, string pass, string displayName, object userState) {
            if ((this.SendPDFDocumentsOperationCompleted == null)) {
                this.SendPDFDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPDFDocumentsOperationCompleted);
            }
            this.InvokeAsync("SendPDFDocuments", new object[] {
                        ticket,
                        mail,
                        ccMail,
                        urlVirtuallyThere,
                        from,
                        pass,
                        displayName}, this.SendPDFDocumentsOperationCompleted, userState);
        }
        
        private void OnSendPDFDocumentsOperationCompleted(object arg) {
            if ((this.SendPDFDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPDFDocumentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Encrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Encrypt(string Input) {
            object[] results = this.Invoke("Encrypt", new object[] {
                        Input});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EncryptAsync(string Input) {
            this.EncryptAsync(Input, null);
        }
        
        /// <remarks/>
        public void EncryptAsync(string Input, object userState) {
            if ((this.EncryptOperationCompleted == null)) {
                this.EncryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncryptOperationCompleted);
            }
            this.InvokeAsync("Encrypt", new object[] {
                        Input}, this.EncryptOperationCompleted, userState);
        }
        
        private void OnEncryptOperationCompleted(object arg) {
            if ((this.EncryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncryptCompleted(this, new EncryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Decrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Decrypt(string Input) {
            object[] results = this.Invoke("Decrypt", new object[] {
                        Input});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecryptAsync(string Input) {
            this.DecryptAsync(Input, null);
        }
        
        /// <remarks/>
        public void DecryptAsync(string Input, object userState) {
            if ((this.DecryptOperationCompleted == null)) {
                this.DecryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecryptOperationCompleted);
            }
            this.InvokeAsync("Decrypt", new object[] {
                        Input}, this.DecryptOperationCompleted, userState);
        }
        
        private void OnDecryptOperationCompleted(object arg) {
            if ((this.DecryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecryptCompleted(this, new DecryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BuildPDFDocumentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendPDFDocumentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void EncryptCompletedEventHandler(object sender, EncryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DecryptCompletedEventHandler(object sender, DecryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591